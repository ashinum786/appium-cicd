<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[This is the sample screenshot]]>
    </line>
    <line>
      <![CDATA[<a href='C:\Users\AshinMohammed\automationLearning\TDDFramework\Screenshots\Android_14_SamsungGalaxyS21\2024-09-25-23-09-16\LoginTests\validLogin.png'> <img src='C:\Users\AshinMohammed\automationLearning\TDDFramework\Screenshots\Android_14_SamsungGalaxyS21\2024-09-25-23-09-16\LoginTests\validLogin.png' height='400' width='250'/> </a>]]>
    </line>
  </reporter-output>
  <suite started-at="2024-09-25T23:09:16 IST" name="Suite" finished-at="2024-09-25T23:10:08 IST" duration-ms="52097">
    <groups>
    </groups>
    <test started-at="2024-09-25T23:09:16 IST" name="SamsungGalaxyS21" finished-at="2024-09-25T23:10:08 IST" duration-ms="52097">
      <class name="com.qa.tests.LoginTests">
        <test-method is-config="true" signature="beforeTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.qa.tests.LoginTests@e350b40]" started-at="2024-09-25T23:09:16 IST" name="beforeTest" finished-at="2024-09-25T23:09:26 IST" duration-ms="9770" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SamsungGalaxyS21]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[RFCR10YVJHM]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.tests.LoginTests@e350b40]" started-at="2024-09-25T23:09:26 IST" name="beforeClass" finished-at="2024-09-25T23:09:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LoginTests@e350b40]" started-at="2024-09-25T23:09:26 IST" name="beforeMethod" finished-at="2024-09-25T23:09:27 IST" duration-ms="1040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@e350b40]" started-at="2024-09-25T23:09:27 IST" name="beforeMethod" finished-at="2024-09-25T23:09:28 IST" duration-ms="685" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidUserName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidUserName()[pri:0, instance:com.qa.tests.LoginTests@e350b40]" started-at="2024-09-25T23:09:28 IST" name="invalidUserName" finished-at="2024-09-25T23:09:45 IST" duration-ms="17170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUserName -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTests@e350b40]" started-at="2024-09-25T23:09:45 IST" name="afterMethod" finished-at="2024-09-25T23:09:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTests@e350b40]" started-at="2024-09-25T23:09:45 IST" name="afterMethod" finished-at="2024-09-25T23:09:47 IST" duration-ms="1990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidUserName status=SUCCESS method=LoginTests.invalidUserName()[pri:0, instance:com.qa.tests.LoginTests@e350b40] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LoginTests@e350b40]" started-at="2024-09-25T23:09:47 IST" name="beforeMethod" finished-at="2024-09-25T23:09:48 IST" duration-ms="718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@e350b40]" started-at="2024-09-25T23:09:48 IST" name="beforeMethod" finished-at="2024-09-25T23:09:48 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.validLogin() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validLogin()[pri:0, instance:com.qa.tests.LoginTests@e350b40]" started-at="2024-09-25T23:09:48 IST" name="validLogin" finished-at="2024-09-25T23:10:06 IST" duration-ms="17849" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Located by By.chained({By.xpath: //android.widget.LinearLayout[@content-desc="Turn on biometrics, button"]/android.widget.LinearLayout}) (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Located by By.chained({By.xpath: //android.widget.LinearLayout[@content-desc="Turn on biometrics, button"]/android.widget.LinearLayout}) (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at com.qa.BaseTest.waitForVisibility(BaseTest.java:115)
at com.qa.BaseTest.click(BaseTest.java:119)
at com.qa.pages.LoginPage.clickOkTurnOnBiometrics(LoginPage.java:51)
at com.qa.tests.LoginTests.validLogin(LoginTests.java:60)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: org.openqa.selenium.NoSuchElementException: Can't locate an element by this strategy: By.chained({By.xpath: //android.widget.LinearLayout[@content-desc="Turn on biometrics, button"]/android.widget.LinearLayout})
at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:166)
at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.call(InterceptorOfASingleElement.java:75)
at io.appium.java_client.proxy.Interceptor.intercept(Interceptor.java:78)
at org.openqa.selenium.remote.RemoteWebElement$ByteBuddy$WUTxQA8M.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
... 30 more
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction@52d6cd34 (tried for 1 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:265)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at io.appium.java_client.pagefactory.AppiumElementLocator.waitFor(AppiumElementLocator.java:135)
at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:160)
... 37 more
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate an element using By.chained({By.xpath: //android.widget.LinearLayout[@content-desc="Turn on biometrics, button"]/android.widget.LinearLayout})
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.4'
Driver info: driver.version: RemoteWebDriver
at io.appium.java_client.pagefactory.bys.builder.ByChained.findElement(ByChained.java:74)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$1.findElement(ElementLocation.java:139)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at io.appium.java_client.pagefactory.bys.ContentMappedBy.findElement(ContentMappedBy.java:54)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$1.findElement(ElementLocation.java:139)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at io.appium.java_client.pagefactory.AppiumElementLocator.lambda$findElement$1(AppiumElementLocator.java:160)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:217)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:210)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
... 39 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[This is the sample screenshot]]>
            </line>
            <line>
              <![CDATA[<a href='C:\Users\AshinMohammed\automationLearning\TDDFramework\Screenshots\Android_14_SamsungGalaxyS21\2024-09-25-23-09-16\LoginTests\validLogin.png'> <img src='C:\Users\AshinMohammed\automationLearning\TDDFramework\Screenshots\Android_14_SamsungGalaxyS21\2024-09-25-23-09-16\LoginTests\validLogin.png' height='400' width='250'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- validLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTests@e350b40]" started-at="2024-09-25T23:10:06 IST" name="afterMethod" finished-at="2024-09-25T23:10:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTests@e350b40]" started-at="2024-09-25T23:10:06 IST" name="afterMethod" finished-at="2024-09-25T23:10:08 IST" duration-ms="1785" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLogin status=FAILURE method=LoginTests.validLogin()[pri:0, instance:com.qa.tests.LoginTests@e350b40] output=This is the sample screenshot]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.qa.tests.LoginTests@e350b40]" started-at="2024-09-25T23:10:08 IST" name="afterClass" finished-at="2024-09-25T23:10:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.qa.tests.LoginTests@e350b40]" started-at="2024-09-25T23:10:08 IST" name="afterTest" finished-at="2024-09-25T23:10:08 IST" duration-ms="582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.qa.tests.LoginTests -->
    </test> <!-- SamsungGalaxyS21 -->
  </suite> <!-- Suite -->
</testng-results>
